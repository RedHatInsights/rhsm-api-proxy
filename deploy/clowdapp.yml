---
apiVersion: v1
kind: Template
metadata:
  name: ${APP_NAME}
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: ${APP_NAME}
  spec:
    envName: ${ENV_NAME}
    webServices:
      public: true
      metrics: true
    dependencies:
    - rbac
    deployments:
    - name: service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
          apiPath: rhsm
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - "/opt/app/caddy"
        - "run"
        - "-adapter"
        - "clowder"
        - "-config"
        - "/config/config.yml.tmpl"
        readinessProbe:
          httpGet:
            path: /_proxy/ping
            port: web
        livenessProbe:
          httpGet:
            path: /_proxy/ping
            port: web
          initialDelaySeconds: 10
        volumes:
        - name: config
          configMap:
            name: ${APP_NAME}-caddy
        - name: tls
          secret:
            secretName: ${PROXY_TLS_SECRET}
        volumeMounts:
        - name: config
          mountPath: /config
        - name: tls
          mountPath: /tls
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}-caddy
  data:
    config.yml.tmpl: |
      ---
      apps:
        http:
          servers:
            proxy:
              logs: {}
              listen:
              - ":{{.AppConfig.PublicPort}}"
              routes:
              - match:
                - path:
                  - "/api/rhsm/*"
                handle:
                - handler: rewrite
                  strip_path_prefix: "/api/rhsm"
                - handler: rbac
                  service_url: http://{{(index .Deps "rbac" "service").Hostname}}:{{(index .Deps "rbac" "service").Port}}/api/rbac/v1
                  application: ${APPLICATION}
                  timeout: 10s
                - handler: reverse_proxy
                  upstreams:
                  - dial: ${RHSM_API_HOST}:${RHSM_API_PORT}
                  headers:
                    request:
                      delete:
                      - Cookie
                      - X-3scale-Proxy-Secret-Token
                  transport:
                    protocol: http
                    tls:
                      client_certificate_file: /tls/keypair.pem
                      client_certificate_key_file: /tls/keypair.pem
                    response_header_timeout: 60s
              - match:
                - path:
                  - "/_proxy/ping"
                handle:
                - handler: static_response
                  status_code: 200
                  body: "pong"
            metrics:
              listen:
              - ":{{.AppConfig.MetricsPort}}"
              routes:
              - handle:
                - handler: metrics

parameters:
- name: APP_NAME
  value: rhsm-api-proxy
- name: PROXY_TLS_SECRET
  value: proxy-client-tls
- name: CPU_LIMIT
  value: 1000m
- name: CPU_REQUEST
  value: 500m
- name: MEMORY_LIMIT
  value: 600Mi
- name: MEMORY_REQUEST
  value: 300Mi
- description: Clowder ENV
  name: ENV_NAME
  required: true
- description: Image
  name: IMAGE
  value: quay.io/cloudservices/rhsm-api-proxy
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: The number of replicas to use for the prometheus deploy
  name: MIN_REPLICAS
  value: '2'
- name: RHSM_API_HOST
- name: RHSM_API_PORT
  value: '443'
- name: APPLICATION
  value: subscriptions,config-manager
